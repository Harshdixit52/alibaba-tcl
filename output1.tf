# VPC
# cn-beijing (for example)
output "vpc_id_use1" {
    description = "Id of VPC in cn-beijing region"
    value = local.vpc_id_use1
}

output "public_subnets_use1" {
    description = "Public subnet Ids associated with VPC in cn-beijing region"
    value = local.public_subnets_use1
}

output "private_subnets_use1" {
    description = "Private subnet Ids associated with VPC in cn-beijing region"
    value = local.private_subnets_use1
}

output "azs_use1" {
    description = "Availability zones used by VPC located in cn-beijing region"
    value = local.vpc_azs_use1
}

output "oss_vpc_interface_endpoint_use1" {
    description = "OSS service interface endpoint associated with VPC in cn-beijing region"
    value = local.oss_interface_endpoint_use1
}

# cn-hangzhou (for example)
output "vpc_id_use2" {
    description = "Id of VPC in cn-hangzhou region"
    value = local.vpc_id_use2
}

output "public_subnets_use2" {
    description = "Public subnet Ids associated with VPC in cn-hangzhou region"
    value = local.public_subnets_use2
}

output "private_subnets_use2" {
    description = "Private subnet Ids associated with VPC in cn-hangzhou region"
    value = local.private_subnets_use2
}

output "azs_use2" {
    description = "Availability zones used by VPC located in cn-hangzhou region"
    value = local.vpc_azs_use2
}

output "oss_vpc_interface_endpoint_use2" {
    description = "OSS service interface endpoint associated with VPC in cn-hangzhou region"
    value = local.oss_interface_endpoint_use2
}

# cn-shanghai (for example)
output "vpc_id_usw2" {
    description = "Id of VPC in cn-shanghai region"
    value = local.vpc_id_usw2
}

output "public_subnets_usw2" {
    description = "Public subnet Ids associated with VPC in cn-shanghai region"
    value = local.public_subnets_usw2
}

output "private_subnets_usw2" {
    description = "Private subnet Ids associated with VPC in cn-shanghai region"
    value = local.private_subnets_usw2
}

output "azs_usw2" {
    description = "Availability zones used by VPC located in cn-shanghai region"
    value = local.vpc_azs_usw2
}

output "oss_vpc_interface_endpoint_usw2" {
    description = "OSS service interface endpoint associated with VPC in cn-shanghai region"
    value = local.oss_interface_endpoint_usw2
}

# ECS
output "ecs_cluster_id" {
    description = "ECS cluster id"
    value = module.ack.ack_cluster_id  # Adjusted for Alibaba Cloud Kubernetes or ECS
}

output "ecs_cluster_name" {
    description = "ECS cluster name"
    value = module.ack.ack_cluster_name  # Adjusted for Alibaba Cloud Kubernetes or ECS
}

# DNS
output "dns_endpoints" {
    description = "DNS endpoints generated by test controller services"
    value = {
        name_servers        = try(module.alibaba_dns[0].name_servers, "")
        bastion             = module.bastion.bastion_endpoint
        ui_endpoint         = module.test_controller_service.ui_endpoint
        agent_endpoint      = module.test_controller_service.agent_endpoint
        opensearch_endpoint = var.create_opensearch ? module.opensearch[0].opensearch_endpoint : ""
    }
}
